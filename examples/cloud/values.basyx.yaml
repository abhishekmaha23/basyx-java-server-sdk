aas-registry:
  image:
    # Possible current options:
    # - eclipsebasyx/aas-registry-log-mongodb:2.0.0-SNAPSHOT
    # - eclipsebasyx/aas-registry-kafka-mongodb:2.0.0-SNAPSHOT - Storage - MongoDB - Event-sink- Kafka
    # - eclipsebasyx/aas-registry-log-mongodb:2.0.0-SNAPSHOT - Storage - MongoDB - Event-sink- Logging (Pod)
    # - eclipsebasyx/aas-registry-kafka-mem:2.0.0-SNAPSHOT - Storage - In-memory - Event-sink- Kafka
    # - eclipsebasyx/aas-registry-log-mem:2.0.0-SNAPSHOT - Storage - In-memory - Event-sink- Logging (Pod)

    # If Kafka is used, then the appropriate Bootstrap connection string must be provided.
    # If Mongo is used, then the appropriate MongoDB connection string must be provided.
    name: eclipsebasyx/aas-registry-log-mongodb:2.0.0-SNAPSHOT
    pullPolicy: IfNotPresent
  service:
    port: 8080
  # Keep it null if not deploying a Kafka instance.
  kafka:
    connectionString: null
  mongodb:
    connectionString: mongodb://adminUser:adminPassword@mongodb:27017
  ingress:
    enabled: true
    host: basyxregistry.example.com
  config: |-
    basyx:
      cors:
        allowed-origins: "*"
        allowed-methods: "GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD"

sm-registry:
  image:
    # Images similar to those above.
    # name: eclipsebasyx/submodel-registry-log-mongodb:2.0.0-SNAPSHOT
    name: eclipsebasyx/submodel-registry-log-mem:2.0.0-SNAPSHOT
    pullPolicy: Always
  service:
    port: 8080
  mongodb:
    # connectionString: mongodb://adminUser:adminPassword@mongodb:27017
    connectionString: null
  ingress:
    enabled: true
    host: basyxsmregistry.example.com
  config: |-
    basyx:
      cors:
        allowed-origins: "*"
        allowed-methods: "GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD"

aas-discovery:
  enabled: true
  image: 
    name: eclipsebasyx/aas-discovery:2.0.0-SNAPSHOT
    pullPolicy: IfNotPresent
  service:
    port: 8080
  config: |-
    server.port=8080
    spring.application.name=AAS Discovery Service

    basyx.aasdiscoveryservice.name=aas-discovery-service

    basyx.backend=InMemory
    # basyx.backend=MongoDB
    # spring.data.mongodb.host=mongo
    # spring.data.mongodb.database=aas-discovery
    # spring.data.mongodb.authentication-database=admin
    # spring.data.mongodb.username=mongoAdmin
    # spring.data.mongodb.password=mongoPassword

    basyx.cors.allowed-origins=*
    basyx.cors.allowed-methods=GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
  ingress:
    enabled: true
    host: basyxdiscovery.example.com

# Also needs an ingress.
aas-environment:
  image: 
    name: eclipsebasyx/aas-discovery:2.0.0-SNAPSHOT
    pullPolicy: IfNotPresent
  service:
    port: 8081
  config: |-
    server.port=8081

    basyx.backend = InMemory
    # basyx.backend = MongoDB
    # spring.data.mongodb.host=mongodb
    # spring.data.mongodb.database=aas-env
    # spring.data.mongodb.authentication-database=admin
    # spring.data.mongodb.username=adminUser
    # spring.data.mongodb.password=adminPassword

    basyx.environment=file:aas
    basyx.aasrepository.feature.mqtt.enabled = true
    basyx.cors.allowed-origins=*
    basyx.cors.allowed-methods=GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD

    mqtt.clientId=AAS-Environment-BIC
    mqtt.hostname=mqtt.cluster.local
    mqtt.port=1884
    mqtt.username=user1
    mqtt.password=password1
  ingress:
    enabled: true
    host: basyx.example.com

# Needs specific ingress.
aas-web-ui:
  image:
    name: eclipsebasyx/aas-gui:v2-240125
    pullPolicy: Always
  ingress:
    enabled: true
    host: aasdashboard.example.com
  config:
    aasRepoUrl: "https://basyx.example.com/shells"
    aasSubmodelsRepoUrl: "https://basyx.example.com/submodels"
    conceptdescriptionRepoUrl: "https://basyx.example.com/concept-descriptions"
    aasRegistryUrl: "https://basyxregistry.example.com/api/v3.0"
    submodelRegistryUrl: "https://basyxsmregistry.example.com/api/v3.0"
  externalPlugins:
    enabled: true
    plugins:
    - fileName: HelloWorldPlugin.vue
      configMapName: hello-world-plugin